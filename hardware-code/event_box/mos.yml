author: mongoose-os
description: A Mongoose OS app skeleton
version: 1.0

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}

# Optional. List of tags for online search.
tags:
  - c

# List of files / directories with C sources. No slashes at the end of dir names.
sources:
  - src

# List of dirs. Files from these dirs will be copied to the device filesystem
#filesystem:
#  - fs

# Custom configuration entries, settable via "device configuration"
# Below is a custom firmware configuration example.
# Uncomment and modify according to your needs:

# config_schema:
#  - ["my_app", "o", {title: "My app custom settings"}]
#  - ["my_app.bool_value", "b", false, {title: "Some boolean value"}]
#  - ["my_app.string_value", "s", "", {title: "Some string value"}]
#  - ["my_app.int_value", "i", 123, {title: "Some integer value"}]

# These settings get compiled into the C structure, and can be accessed
# from the C code this way:
#
# printf("Hello from %s!\n", mgos_sys_config_get_device_id());
#
# Settings are cool: can be modified remotely without full firmware upgrade!
#
# To see all available compiled settings, buid the firmware and open
# build/gen/mgos_config.h file.
#
# Also, in this config_schema section, you can override existing
# settings that has been created by other libraries. For example, debug log
# level is 2 by default. For this firmware we can override it to 3:
#
# config_schema:
#  - ["debug.level", 3]

conds:
  - when: build_vars.TARGET == "mood"
    apply:
      config_schema:
        - ["pins.redButton", "i", 25, { title: "GPIO pin for red button" }]
        - [
            "pins.yellowButton",
            "i",
            22,
            { title: "GPIO pin for yellow button" },
          ]
        - ["pins.greenButton", "i", 33, { title: "GPIO pin for green button" }]
        - ["pins.redLED", "i", 18, { title: "GPIO pin for red LED" }]
        - ["pins.greenLED", "i", 17, { title: "GPIO pin for green LED" }]
        - ["pins.blueLED", "i", 16, { title: "GPIO pin for blue LED" }]

  - when: build_vars.TARGET == "event"
    apply:
      config_schema:
        - ["pins.redButton", "i", 5, { title: "GPIO pin for red button" }]
        - [
            "pins.yellowButton",
            "i",
            18,
            { title: "GPIO pin for yellow button" },
          ]
        - ["pins.greenButton", "i", 19, { title: "GPIO pin for green button" }]
        - ["pins.redLED", "i", 4, { title: "GPIO pin for red LED" }]
        - ["pins.greenLED", "i", 16, { title: "GPIO pin for green LED" }]
        - ["pins.blueLED", "i", 17, { title: "GPIO pin for blue LED" }]

config_schema:
  - ["device.id", "knowit"]
  - ["device.password", "objectnet"]

  #WIFI
  - ["wifi.ap.ssid", "s", "knowit_event_box", { title: "SSID" }]
  - ["wifi.ap.pass", "s", "knowit-event", { title: "wifi password" }]
  - [
      "wifi.ap.keep_enabled",
      "b",
      true,
      { title: "Keep AP enabled when station is on" },
    ]
  - ["wifi.ap.enable", "b", true, { title: "enable ap" }]

  #Captive portal
  - [
      "cportal.enable",
      "b",
      true,
      { title: "Enable WiFi captive portal on device boot" },
    ]
  - [
      "cportal.any",
      "b",
      true,
      { title: "Return index file for any non-hostname matching requests" },
    ]
  - [
      "cportal.ip_redirect",
      "b",
      true,
      {
        title: "Send 302 redirect to configured hostname when IP directly accessed",
      },
    ]

libs:
  - origin: https://github.com/mongoose-os-libs/boards
  - origin: https://github.com/mongoose-os-libs/ca-bundle
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/http-server
  - origin: https://github.com/mongoose-os-libs/wifi
  - origin: https://github.com/mongoose-os-libs/wifi-setup-web-ui
  - origin: https://github.com/mongoose-os-libs/aws
  - origin: https://github.com/tripflex/captive-portal

cdefs:
  MG_ENABLE_DNS: 1
  MG_ENABLE_DNS_SERVER: 1
  MGOS_WIFI_ENABLE_AP_STA: 1

# Used by the mos tool to catch mos binaries incompatible with this file format
manifest_version: 2017-09-29
